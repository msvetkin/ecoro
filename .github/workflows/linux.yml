name: linux

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Release", "Debug"]
        os: [ubuntu-20.04]
        compiler: [
            {
              type: gcc,
              version: 10,
              cc: gcc,
              cxx: g++,
              triplet: x64-linux
            },
            {
              type: clang,
              version: 10,
              cc: clang,
              cxx: clang++,
              triplet: x64-linux-clang-libcxx
            }
        ]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      shell: bash
      run: |
          sudo apt-get update
          sudo apt-get install ninja-build

    - name: Install gcc
      if: matrix.compiler.type == 'gcc'
      shell: bash
      run: |
          sudo apt-get install g++-${{matrix.compiler.version}}

    - name: Install libc++
      if: matrix.compiler.type == 'clang'
      shell: bash
      run: |
        sudo apt-get install \
            libc++-${{matrix.compiler.version}}-dev \
            libc++abi-${{matrix.compiler.version}}-dev

    - name: Install packages
      working-directory: ${{ env.HOME }}
      shell: bash
      run: |
          CXX=${{matrix.compiler.cxx}}-${{matrix.compiler.version}} \
          CC=${{matrix.compiler.cc}}-${{matrix.compiler.version}} \
          vcpkg install gtest \
              --triplet=${{matrix.compiler.triplet}} \
              --overlay-triplets=./cmake/vcpkg/triplets/

    - name: Configure CMake
      shell: bash
      run: |
          VCPKG_ROOT=/usr/local/share/vcpkg \
          COMPILER_VERSION=-${{matrix.compiler.version}} \
          cmake --preset vcpkg-${{matrix.compiler.type}}

    - name: Build
      shell: bash
      run: |
        cmake \
            --build \
            --preset vcpkg-${{matrix.compiler.type}} \
            --config ${{matrix.build_type}}

    - name: Test
      shell: bash
      run: |
        ctest \
            --preset vcpkg-${{matrix.compiler.type}} \
            --config ${{matrix.build_type}}
